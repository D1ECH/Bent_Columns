*{
    background-color: black;
}
.grid-container {
    display: grid; /*Esta es la manera de inicializar la rejilla*/
    background-color: black;

    /*¿CÓMO HACEMOS QUE SEA UN GRID DE VARIAS COLUMNAS?
    grid-template-columns: auto auto auto; /*Con auto conseguimos que se calcule el tamaño de columnas/filas de forma automática
                                            Pero también se puede especificar.
                                            
    grid-template-rows: auto auto auto auto;
*/
    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr)); /* Columnas adaptables */
    grid-template-rows: repeat(auto-fit, minmax(100px, 1fr)); /* Filas adaptables */
    height: 100vh; /* Altura del viewport */
    gap: 50px;

    /*
    justify-content: normal; /*esta propiedad alinea el contenido en el eje horizontal

    align-content: normal; /*esta propiedad alinea el contenido en el eje vertical
    */
    justify-content: center;
    align-content: normal;
}

.grid-container div {
    text-align: center;
    color: wheat;
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;

    /*Esto se aplica a todos los divs dentro de la clase que hemos especificado, pero si 
    queremos tocarlos individualmente, es decir, modificar cada celda sola pues tenemos que
    asignarle una clase a cada una de ellas en el HTML*/
}

.item1{
    /*grid-column: 1/ 3;    así indicamos el número de columnas que quiero que ocupe, es decir, que empiece en la número 
                            1 (posición inicial) y acabe en la 3 (posición final), por tanto, utiliza dos columnas
                            
                            Otra manera de hacer esto es añadiendo 'span' antes del 3 --> la diferencia es que no habría que 
                            indicar LA POSICIÓN FINAL sino simplemente las posiciones que queremos que se expandan desde la inicial*/
    /*grid-row: ;   igal que lo anterior pero de cara a las filas y no las columnass
    */

    /*grid-area:    se le pueden especificar cuatro valores, que determinan al final como la unión de las dos propiedades anteriores
                    ej: 1/2/5/6 --> empieza en la fila 1
                                --> empieza en la columna 2
                                --> finaliza en la línea 5
                                --> finaliza en la columna 6*/
    background: rgb(134,129,78);
    background: radial-gradient(circle, rgba(134,129,78,1) 0%, rgba(0,0,0,1) 100%);
    border: 1px solid white;
    grid-area: 2 / 1 / 4 / 1;
}

.item6{
    background: #fff05f;
    grid-area: 3/1/4/2;
    border: 1px solid white;
}


.item2{
    background-color: white;
    grid-area: 2 / 2 / 4 / 2;
    border: 1px solid white;
}

.item3{
    background-color: white;
    grid-area: 2/3/3/4;
    border: 1px solid white;
}

.item4{
    background-color: white;
    grid-row: 3/span 2;
    border: 1px solid white;
}

.item5{
    background-color: white;
    grid-row: 4;
    grid-column: 1/span 2;
    border: 1px solid white;
}

.item7{
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid grey;
    background-color: black;
    grid-area: 1/1/2/4;
}

@media all and (max-width: 900px){
    .grid-container{
        gap: 45px;
    }
    .item1{
        grid-row: 2/span 2;
        grid-column: 1/span 2;
    }
    .item6{
        grid-area: 3/1/4/3;
    }
    .item2{
        grid-area: 2 / 3 / 4 / 4;
    }
    .item3{
        grid-area: 1/3/2/4;
    }
    .item4{
        grid-row: 4/span 1;
    }
    .item5{
        grid-row: 4;
        grid-column: 1/span 2;
    }
    .item7{
        grid-area: 1/1/2/3;
    }
}

@media all and (max-width: 850px){
    .grid-container{
        gap: 25px;
    }
    .item1{
        grid-row: 2/span 2;
        grid-column: 1/span 2;
    }
    .item6{
        grid-area: 3/1/4/3;
    }
    .item2{
        grid-area: 4/1/5/1;
    }
    .item3{
        grid-area: 1/2/2/3;
    }
    .item4{
        grid-area: 4/2/5/2;
    }
    .item5{
        grid-row: 5;
        grid-column: 1/span 2;
    }
    .item7{
        grid-area: 1/1/2/2;
    }
}

@media all and (max-width: 570px){
    .grid-container{
        gap: 20px;
    }
    .item1{
        grid-row: 2/span 1;
        grid-column: 1/span 2;
    }
    .item6{
        display: none;
    }
    .item2{
        grid-area: 4/1/5/3;
    }
    .item3{
        grid-area: 1/1/2/3;
    }
    .item4{
        grid-area: 5/1/6/3;    }    
    .item5{
        grid-area: 6/1/7/3;
    }
}

